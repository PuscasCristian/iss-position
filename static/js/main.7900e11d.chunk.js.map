{"version":3,"sources":["hooks/useGetData.js","hooks/useGetAstros.js","comps/MapComp.js","App.js","index.js"],"names":["useGetData","useState","count","setCount","issData","setissData","setTimeout","getData","a","fetch","response","json","issPos","console","log","useEffect","useGetAstros","astro","setAstro","getAstros","issAstro","Icon","L","icon","iconUrl","iconSize","iconAnchor","popupAnchor","MapComp","location","lat","lng","zoom","setLocation","markers","setMarkers","popup","setPopup","iss_position","latitude","longitude","number","people","map","ppl","name","Map","className","center","TileLayer","attribution","url","Marker","position","Popup","key","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTA+BeA,EA7BI,WAAO,IAAD,EACKC,mBAAS,GADd,mBACdC,EADc,KACPC,EADO,OAESF,qBAFT,mBAEdG,EAFc,KAELC,EAFK,KAGrBC,YAAW,WACPH,EAASD,EAAQ,KAClB,KAEH,IAAMK,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,MACnB,2CAHI,cAEFC,EAFE,gBAKaA,EAASC,OALtB,OAKFC,EALE,OAMRP,EAAWO,GANH,kDAQRC,QAAQC,IAAI,OAAZ,MARQ,0DAAH,qDAmBb,OAPAC,qBAAU,WAEN,OADAR,IACO,WACHA,OAEL,CAACL,IAEG,CAAEE,YCCEY,EA3BM,WAAO,IAAD,EACGf,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,OAEGF,qBAFH,mBAEhBgB,EAFgB,KAETC,EAFS,KAGvBZ,YAAW,WACPH,EAASD,EAAQ,KAClB,KAEH,IAAMiB,EAAS,uCAAG,8BAAAX,EAAA,+EAEaC,MACnB,0CAHM,cAEJC,EAFI,gBAKaA,EAASC,OALtB,OAKJS,EALI,OAMVF,EAASE,GANC,kDAQVP,QAAQC,IAAI,+BAAZ,MARU,0DAAH,qDAiBf,OANAC,qBAAU,WAEN,OADAI,IACO,WACHA,OAEL,CAACjB,IACG,CAAEe,UCpBPI,EAAOC,IAAEC,KAAK,CAChBC,QAAS,0DACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAuEPC,EApEC,WAAO,IACXxB,EAAYJ,IAAZI,QACAa,EAAUD,IAAVC,MAFU,EAIchB,mBAAS,CACrC4B,SAAU,CACNC,IAAK,MACLC,IAAK,OAETC,KAAM,IATQ,mBAIXH,EAJW,KAIDI,EAJC,OAWYhC,qBAXZ,mBAWXiC,EAXW,KAWFC,EAXE,OAYQlC,qBAZR,mBAYXmC,EAZW,KAYJC,EAZI,KAqClB,OAvBAtB,qBAAU,WACFX,IACA+B,EAAW,CACPL,IAAK1B,EAAQkC,aAAaC,SAC1BR,IAAK3B,EAAQkC,aAAaE,YAE9BP,EAAY,CACRJ,SAAU,CACNC,IAAK1B,EAAQkC,aAAaC,SAC1BR,IAAK3B,EAAQkC,aAAaE,gBAIvC,CAACpC,IACJW,qBAAU,WACFE,GACAoB,EAAS,CACLI,OAAQxB,EAAMwB,OACdC,OAAQzB,EAAMyB,OAAOC,KAAI,SAACC,GAAD,OAASA,EAAIC,YAG/C,CAAC5B,IAGA,kBAAC6B,EAAA,EAAD,CAAKC,UAAU,cAAcC,OAAQd,EAASF,KAAMH,EAASG,MACzD,kBAACiB,EAAA,EAAD,CACIC,YAAY,0EACZC,IAAI,uDAEPjB,GACG,6BACI,kBAACkB,EAAA,EAAD,CAAQL,UAAU,SAASM,SAAUnB,EAASX,KAAMF,GAChD,kBAACiC,EAAA,EAAD,KACKlB,GACG,6BACI,mDACyBA,EAAMK,OAAQ,IADvC,kCAEmC,8BAEnC,4BACKL,EAAMM,OAAOC,KAAI,SAACE,GAAD,OACd,wBAAIU,IAAKV,EAAKW,QAASX,aC5DpDY,EAJH,WACR,OAAO,kBAAC,EAAD,OCAXC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.7900e11d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useGetData = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [issData, setissData] = useState();\r\n    setTimeout(() => {\r\n        setCount(count + 1);\r\n    }, 1000);\r\n\r\n    const getData = async function () {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://api.open-notify.org/iss-now.json\"\r\n            );\r\n            const issPos = await response.json();\r\n            setissData(issPos);\r\n        } catch (err) {\r\n            console.log(\"Opps\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        return () => {\r\n            getData();\r\n        };\r\n    }, [count]);\r\n\r\n    return { issData };\r\n};\r\n\r\nexport default useGetData;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useGetAstros = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [astro, setAstro] = useState();\r\n    setTimeout(() => {\r\n        setCount(count + 1);\r\n    }, 5000);\r\n\r\n    const getAstros = async function () {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://api.open-notify.org/astros.json\"\r\n            );\r\n            const issAstro = await response.json();\r\n            setAstro(issAstro);\r\n        } catch (err) {\r\n            console.log(\"Couldn't get astronauts data\", err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAstros();\r\n        return () => {\r\n            getAstros();\r\n        };\r\n    }, [count]);\r\n    return { astro };\r\n};\r\n\r\nexport default useGetAstros;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport useGetData from \"../hooks/useGetData\";\r\nimport useGetAstros from \"../hooks/useGetAstros\";\r\n\r\nconst Icon = L.icon({\r\n    iconUrl: \"http://open-notify.org//Open-Notify-API/map/ISSIcon.png\",\r\n    iconSize: [50, 30],\r\n    iconAnchor: [25, 15],\r\n    popupAnchor: [0, -30],\r\n});\r\n\r\nconst MapComp = () => {\r\n    const { issData } = useGetData(); // custom hook get iss position\r\n    const { astro } = useGetAstros(); // custom hook get astronauts data\r\n\r\n    const [location, setLocation] = useState({\r\n        location: {\r\n            lat: 1.774,\r\n            lng: 2.703,\r\n        },\r\n        zoom: 4,\r\n    });\r\n    const [markers, setMarkers] = useState();\r\n    const [popup, setPopup] = useState();\r\n\r\n    useEffect(() => {\r\n        if (issData) {\r\n            setMarkers({\r\n                lat: issData.iss_position.latitude,\r\n                lng: issData.iss_position.longitude,\r\n            });\r\n            setLocation({\r\n                location: {\r\n                    lat: issData.iss_position.latitude,\r\n                    lng: issData.iss_position.longitude,\r\n                },\r\n            });\r\n        }\r\n    }, [issData]);\r\n    useEffect(() => {\r\n        if (astro) {\r\n            setPopup({\r\n                number: astro.number,\r\n                people: astro.people.map((ppl) => ppl.name),\r\n            });\r\n        }\r\n    }, [astro]);\r\n\r\n    return (\r\n        <Map className='map-wrapper' center={markers} zoom={location.zoom}>\r\n            <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n            />\r\n            {markers && (\r\n                <div>\r\n                    <Marker className='marker' position={markers} icon={Icon}>\r\n                        <Popup>\r\n                            {popup && (\r\n                                <div>\r\n                                    <h4>\r\n                                        There are currently {popup.number}{\" \"}\r\n                                        people on ISS craft right now. <br />\r\n                                    </h4>\r\n                                    <ul>\r\n                                        {popup.people.map((name) => (\r\n                                            <li key={name.length}>{name}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </Popup>\r\n                    </Marker>\r\n                </div>\r\n            )}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default MapComp;\r\n","import React from \"react\";\nimport \"../node_modules/leaflet/dist/leaflet.css\";\nimport MapComp from \"./comps/MapComp\";\n\nconst App = () => {\n    return <MapComp />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}